/*
罗马数字共有7个，即I（1）、V（5）、X（10）、L（50）、C（100）、D（500）和M（1000）。
1、重复数次：一个罗马数字重复几次，就表示这个数的几倍。

2、右加左减：
2.1 在较大的罗马数字的右边记上较小的罗马数字，表示大数字加小数字。
2.2 在较大的罗马数字的左边记上较小的罗马数字，表示大数字减小数字。
2.3 左减的数字有限制，仅限于I、X、C。比如45不可以写成VL，只能是XLV
2.4 但是，左减时不可跨越一个位数。比如，99不可以用IC（100 - 1）表示，而是用XCIX（[100 - 10] + [10 - 1]）表示。（等同于阿拉伯数字每位数字分别表示。）
2.5 左减数字必须为一位，比如8写成VIII，而非IIX。
2.6 右加数字不可连续超过三位，比如14写成XIV，而非XIIII。（见下方“数码限制”一项。）

3、加线乘千：
3.1 在罗马数字的上方加上一条横线或者加上下标的Ⅿ，表示将这个数乘以1000，即是原数的1000倍。
3.2 同理，如果上方有两条横线，即是原数的1000000（1000^{2}）倍。

4、数码限制：
4.1 同一数码最多只能出现三次，如40不可表示为XXXX，而要表示为XL。
4.2 例外：由于IV是古罗马神话主神朱庇特（即IVPITER，古罗马字母里没有J和U）的首字，因此有时用IIII代替Ⅳ。

*/

class Solution(object):
    def intToRoman(self, num):
        """
        :type num: int
        :rtype: str
        """
        ans = ""
        if(num/1000):
            t = num/1000
            num %= 1000
            while(t):
                ans += 'M'
                t -= 1
        if(num/900):
            ans += 'CM'
            num -= 900
        if(num/500):
            num -= 500
            ans += 'D'
        if(num/400):
            num -= 400
            ans += 'CD'
        if(num/100):
            t = num/100
            num %= 100
            while(t):
                ans += 'C'
                t -= 1
        if(num/90):
            num -= 90
            ans += 'XC'
        if(num/50):
            num -= 50
            ans += 'L'
        if(num/40):
            num -= 40
            ans += 'XL'
        if(num/10):
            t = num/10
            num %= 10
            while(t):
                ans += 'X'
                t -= 1
        if(num/9):
            num -= 9
            ans += 'IX'
        if(num/5):
            num -= 5
            ans += 'V'
        if(num/4):
            num -= 4
            ans += 'IV'
        if(num):
            t = num
            while(t):
                ans += 'I'
                t -= 1
            
        return ans
