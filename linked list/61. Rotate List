# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        temp = head
        before = None
        length = 0
        while(temp != None):
            length += 1
            before = temp
            temp = temp.next
        
        if(length == 0 or k == 0):
            return head
        k %= length
        now = head
        for i in range(length-k-1):
            now = now.next
        before.next = head
        head = now.next
        now.next = None
        return head
