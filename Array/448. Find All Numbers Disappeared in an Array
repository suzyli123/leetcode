import collections
class Solution(object):
    def findDisappearedNumbers(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        ans = []
        n = len(nums)
        if(n == 0):
            return ans
        d = collections.defaultdict(int)
        for x in nums:
            d[x] += 1
        for x in range(1, n+1):
            if(d[x] == 0):
                ans.append(x)
        return ans

class Solution(object):
    def findDisappearedNumbers(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        n = len(nums)
        ans = []
        for i in range(n):
            temp = abs(nums[i])%n
            if(nums[temp] > 0):
                nums[temp] = -nums[temp]
        for i in range(n):
            if(nums[i] > 0):
                if(i == 0):
                    ans.append(n)
                else:
                    ans.append(i)
        return ans


class Solution(object):
    def findDisappearedNumbers(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        return list(set(i for i in range(1, len(nums)+1)) - set(nums))
