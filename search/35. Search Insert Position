#二分查找
class Solution(object):
    def searchInsert(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        length = len(nums)
        left, right = 0, length-1
        mid = 0
        while(left < right):
            mid = int((left + right)/2)
            if(target == nums[mid]):
                return mid
            elif(target < nums[mid]):
                right = mid - 1
            else:
                left = mid + 1
        print(left, right)
        if(target <= nums[left]):
            return left
        else:
            return left + 1
//C++ solution
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int left = 0, right = nums.size()-1, mid;
        while(left <= right){
            mid = (left + right)/2;
         //   printf("%d %d %d\n", left, right, mid);
            if(nums[mid] == target)
                return mid;
            else if(nums[mid] > target)
                right = mid - 1;
            else
                left = mid + 1;
        }
       // printf("%d %d\n", left, right);
        return left;
    }
};
