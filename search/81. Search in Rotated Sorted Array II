#solution1 list(set())去重复
@#solution2 去除left和mid重复的部分，以确定mid的具体位置

class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: bool
        """

        nums = list(set(nums))
        left = 0
        right = len(nums) - 1
        if(right == -1):
            return False
        while(left < right):
            mid = int((left + right)/2)
            print(left, right, mid)
            if(nums[mid] == target):
                return True
            if(nums[mid] >= nums[left]):
                if(nums[mid] > target and nums[left] <= target):
                    right = mid - 1
                else:
                    left = mid + 1
            if(nums[mid] <= nums[right]):
                if(nums[mid] < target and nums[right] >= target):
                    left = mid + 1
                else:
                    right = mid - 1
        print(left, nums[left])
        if(nums[left] == target):
            return True
        else:
            return False
            
            
            class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: bool
        """

        left = 0
        right = len(nums) - 1
        if(right == -1):
            return False
        while(left < right):
            mid = int((left + right)/2)
            print(left, right, mid)
            if(nums[mid] == target):
                return True
            while(nums[mid] == nums[left] and left<right):
                left += 1
            if(nums[mid] > nums[left]):
                if(nums[mid] > target and nums[left] <= target):
                    right = mid - 1
                else:
                    left = mid + 1
            if(nums[mid] <= nums[right]):
                if(nums[mid] < target and nums[right] >= target):
                    left = mid + 1
                else:
                    right = mid - 1
        print(left, nums[left])
        if(nums[left] == target):
            return True
        else:
            return False
