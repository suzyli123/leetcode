class Solution(object):
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        m = len(grid)
        n = len(grid[0])
        if(m == 1 and n == 1):
            return grid[0][0]
        sum = [[0 for x in range(n)] for y in range(m)]
        sum[0][0] = grid[0][0]
        for i in range(1, m):
            sum[i][0] = sum[i-1][0] + grid[i][0]
        for j in range(1, n):
            sum[0][j] = sum[0][j-1] + grid[0][j]
        for i in range(1, m):
            for j in range(1, n):
                sum[i][j] = min(sum[i-1][j], sum[i][j-1]) + grid[i][j]
        return sum[m-1][n-1]


#状态压缩
class Solution(object):
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        m = len(grid)
        n = len(grid[0])
        if(m == 1 and n == 1):
            return grid[0][0]
        sum = [0 for x in range(n)]
        sum[0] = grid[0][0]
        for j in range(1, n):
            sum[j] = sum[j-1] + grid[0][j]
        for i in range(1, m):
            sum[0] += grid[i][0]
            for j in range(1, n):
                sum[j] = min(sum[j-1], sum[j]) + grid[i][j]
        return sum[n-1]
